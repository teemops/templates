AWSTemplateFormatVersion: "2010-09-09"
Description: Teemops CodeBuild and Deploy with GIT Source
Parameters:
  AppId:
    Description: Teemops App ID
    Type: String
  AppName:
    Description: Teemops App Name
    Type: String
  GitRepo:
    Description: Repo path
    Type: String
  DeploymentPath:
    Description: Path where code will run
    Type: String
    Default: /var/www/html 
  Language:
    Description: Which programming language to build for?
    Type: String
    AllowedValues: ['node', 'php', 'java', '.net', 'ruby', 'php55', 'php56', 'node8', 'node10', 'node7', 'node6', 'node5', 'java7'] 
  ASGGroup:
    Description: Arn of the Autoscaling Group you want to deploy to
    Type: String
Mappings:
  Langs:
    node:
      image: ''
      os: LINUX_CONTAINER
    php:
      image: ''
      os: LINUX_CONTAINER
    java:
      image: ''
      os: LINUX_CONTAINER
Resources:
  TopsS3DeployBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
  TopsS3PipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
  TopsCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Description: AWS CodeBuild Project used to build and test code before deployment
    Properties:
      Artifacts:
        Location: !Ref TopsS3DeployBucket
        Name: 'build-output.zip'
        # NamespaceType: BUILD_ID
        Packaging: ZIP
        # Path: 'codebuild'
        Type: S3
      Cache:
        Location: !Ref 'TopsS3DeployBucket'
        Type: S3
      Description: !Join
        - ' '
        - - 'Build for App '
          - !Ref AppId
          - !Ref AppName
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:2.0'
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt TopsCodeBuildRole.Arn
      Source:
        Auth:
          Type: OAUTH
        Location: !Ref GitRepo
        Type: GITHUB
      Triggers:
        Webhook: true
      TimeoutInMinutes: 10
  TopsCodeBuildRole:
    Type: AWS::IAM::Role
    Description: Creating service role in IAM for AWS CodeBuild
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /service-role/
      Policies:
        -
          PolicyName: "CodeBuildAccessPolicies"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              -
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref TopsS3DeployBucket
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref TopsS3DeployBucket
                      - /*
  TopsCodeDeploy:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Join
        - '-'
        - - 'teemops'
          - !Ref AppId
          - !Ref AppName 
  TopsDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      DeploymentGroupName: !Join
        - '-'
        - - 'teemops-dg'
          - !Ref AppId
          - !Ref AppName
      ApplicationName: !Ref TopsCodeDeploy
      ServiceRoleArn: !GetAtt TopsCodeDeployRole.Arn
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      AutoScalingGroups:
        - !Ref ASGGroup
  TopsCodeDeployRole:
    Type: AWS::IAM::Role
    Description: Creating service role in IAM for AWS CodeDeploy
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codedeploy.amazonaws.com
      Path: /service-role/
      Policies:
        -
          PolicyName: deploy-asg
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - ec2:*
                  - autoscaling:*
                Resource: "*"
  TopsCodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Join
        - '-'
        - - 'teemops-dg'
          - !Ref AppId
          - !Ref AppName
      ArtifactStore:
        Location: !Ref TopsS3DeployBucket
        Type: S3
      RoleArn: !Sub '${TopsCodePipelineRole.Arn}'
      Stages:
        - Name: Source
          Actions: 
          - Name: Source
            ActionTypeId:
              Category: Source 
              Owner: AWS 
              Version: 1 
              Provider: "S3"
            OutputArtifacts:
            - Name: SourceApp
            Configuration:
              S3Bucket: !Ref TopsS3DeployBucket
              S3ObjectKey: "build-output.zip"
              PollForSourceChanges: false
        - Name: Deploy
          Actions:
          - Name: Deploy
            ActionTypeId:
              Category: Deploy 
              Owner: AWS 
              Version: 1 
              Provider: CodeDeploy
            InputArtifacts:
            - Name: SourceApp
            Configuration:
              ApplicationName: !Ref TopsCodeDeploy
              DeploymentGroupName: !Ref TopsDeploymentGroup
        # - Name: Test
        #   Actions:
        #   - Name: Test
        #     ActionTypeId:
        #       Category: Invoke 
        #       Owner: AWS 
        #       Version: 1 
        #       Provider: Lambda
        #     Configuration:
        #       FunctionName: !Ref TestLambda
        #       UserParameters: !Sub 'http://${EC2Instance.PublicDnsName}'
  TopsCodePipelineRole:
    Type: AWS::IAM::Role
    Description: Creating service role in IAM for AWS CodePipeline
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
      Path: /service-role/
      Policies:
        -
          PolicyName: pipeline-main
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                  - codebuild:*
              - Resource: "*"
                Effect: Allow
                Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
              - Resource: "*"
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeChangeSet
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:UpdateStack
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref TopsS3DeployBucket
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref TopsS3DeployBucket
                      - /*
Outputs:
  TopsCodeDeployName:
    Description: The code deploy application name
    Value: !Ref TopsCodeDeploy
  TopsCodeDeployLink:
    Description: The AWS console URL for the CodeDeploy application
    Value:
      Fn::Sub: 'https://${AWS::Region}.console.aws.amazon.com/codedeploy/home?region=${AWS::Region}#/applications/${TopsCodeDeploy}'
    